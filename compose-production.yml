version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-prod
    container_name: adonis-app
    environment:
      - VIRTUAL_HOST=instances-aystone.silvus.me
      - LETSENCRYPT_HOST=instances-aystone.silvus.me
      - LETSENCRYPT_EMAIL=instancesAY2-noreply@silvus.me
      - VIRTUAL_PORT=80
      - VIRTUAL_PORT_EXTERNAL=8080
    volumes:
      - ./:/app
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    expose:
      - "80"
      - "3333"
    networks:
      - nginx-network
    depends_on:
      - postgres
    restart: always

  nginx-proxy:
    image: nginxproxy/nginx-proxy:alpine
    container_name: nginx-proxy
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
    networks:
      - nginx-network
    restart: always

  letsencrypt:
    image: nginxproxy/acme-companion
    container_name: nginx-letsencrypt
    environment:
      - DEFAULT_EMAIL=instancesAY2-noreply@silvus.me
      - ACME_CA_URI=https://acme-staging-v02.api.letsencrypt.org/directory
    depends_on:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
    networks:
      - nginx-network
    restart: always

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: aystone
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - nginx-network
    restart: always

volumes:
  postgres-data:

networks:
  nginx-network:
    name: nginx-proxy
    external: false
